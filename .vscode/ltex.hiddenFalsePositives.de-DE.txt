{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\Q\\\\vcite{.*}\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QVor diesem Hintergrund könnte ein dezentraler, Ende-zu-Ende-ver-schlüsselter Messenger, der über das Tor-Netzwerk kommuniziert, eine Lösung für diese Probleme darstellen.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QBei herkömmlichen Messengern wie WhatsApp, Signal und Co. wird zur bi- oder multilateralen Kommunikation die Telefonnummern benötigt, um untereinander in Kontakt treten zu können.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDabei wird auf die Erklärung des Padding-Verfahrens der asymmetrischen Verschlüsselung verzichtet, da eine Erläuterung den Rahmen dieser Facharbeit überschreiten würde.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUm einen sicheren Nachrichtenaustausch zu gewährleisten, wird in dieser Arbeit E2EE implementiert.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QAls Verfahren zur Ver- und Entschlüsselung der Nachrichten wird (unter anderem) die asymmetrische Verschlüsselung verwendet . Diese Arbeit beschränkt sich bei der asymmetrischen Verschlüsselung auf das RSA-Verfahren.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QGrundsätzlich wird bei der asymmetrischen Verschlüsselung ein Schlüsselpaar (key pair) verwendet, das aus einem privaten Schlüssel (private key) und einem öffentlichen Schlüssel (public key) besteht \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"LEERZEICHEN_VOR_AUSRUFEZEICHEN_ETC","sentence":"^\\QUm mit dem öffentlichen Schlüssel eine Verschlüsselung durchführen zu können wir die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q benötigt . \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ist eine Zufallszahl, für welche folgende Bedingungen erfüllt sein müssen : \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q kein Teiler von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Nachdem die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q gefunden wurde, ist der öffentliche Schlüssel nun vollstndig und kann an den Absender übermittelt (bzw. veröffentlicht) werden.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QUm mit dem öffentlichen Schlüssel eine Verschlüsselung durchführen zu können wir die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q benötigt . \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ist eine Zufallszahl, für welche folgende Bedingungen erfüllt sein müssen : \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q kein Teiler von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Nachdem die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q gefunden wurde, ist der öffentliche Schlüssel nun vollständig und kann an den Absender übermittelt (bzw. veröffentlicht) werden.\\E$"}
{"rule":"LEERZEICHEN_VOR_AUSRUFEZEICHEN_ETC","sentence":"^\\QUm mit dem öffentlichen Schlüssel eine Verschlüsselung durchführen zu können wir die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q benötigt . \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ist eine Zufallszahl, für welche folgende Bedingungen erfüllt sein müssen : \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q kein Teiler von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Nachdem die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q gefunden wurde, ist der öffentliche Schlüssel nun vollständig und kann an den Absender übermittelt (bzw. veröffentlicht) werden.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUm ein Verständnis für die Sicherheit dieses Messengers zu erlangen, geht diese Arbeit im zweiten Kapitel auf die asymmetrische Verschlüsselung und die Ende-zu-Ende-Verschlüsselung (E2EE) ein.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUm die Sicherheit des RSA-Verfahrens bewerten zu können, müssen wir zunächst den Ver-/Entschlüsselungsprozess betrachten.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QZur Entschlüsselung einer Nachricht ist die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, welche im privaten Schlüssel enthalten ist, erforderlich \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Das Schlüsselpaar wurde nun vollständig berechnet und die beiden Schlüssel hängen mathematisch miteinander zusammen.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDas bedeutet, dass es zwar einfach ist, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu berechnen (im Falle der RSA Verschlüsselung), es aber unmöglich ist, von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q auf den ursprünglichen Wert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu schließen, ohne eine weitere notwendige Komponente zu kennen (bei dem RSA-Verfahren wäre dies die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q) . [width=0.5]img/Trapdoor_permutation.svg Eine Visualisierung der Trapdoor-Einwegfunktion \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Die ausschlaggebende Größe ist hierbei die Bitlänge des Produktes \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QDas bedeutet, dass es zwar einfach ist, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu berechnen (im Falle der RSA Verschlüsselung), es aber unmöglich ist, von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q auf den ursprünglichen Wert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu schließen, ohne eine weitere notwendige Komponente zu kennen (bei dem RSA-Verfahren wäre dies die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q) . [width=0.5]img/Trapdoor_permutation.svg Eine Visualisierung der Trapdoor-Einwegfunktion \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Die ausschlaggebende Größe ist hierbei die Bitlänge des Produktes \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QIm Gegensatz zu normalen öffentlichen Servern müssen bei Onion Services keine Ports geöffnet werden, damit sich ein Client mit dem Server verbinden kann, da der Onion Service mit dem Tor-Netzwerk nur über ausgehende Verbindungen kommuniziert (auch bekannt als NAT-Punching) und alle Daten darüber geleitet werden .\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDer Service sendet nun eine Anfrage an die letzte \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q im \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, sodass diese zu einem \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q wird, wodurch andere Clients später den Service erreichen können . Dieser Vorgang wiederholt sich zweimal, bis der Onion Service drei verschiedene \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q auf drei verschiedenen \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q gefunden hat . Nun wird ein Onion Service descriptor erstellt, welcher die Adressen der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q und notwendige Authentifizierungsschlüssel enthält \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUnter anderem wird nun aus dem öffentlichen Schlüssel die Adresse des Onion Service generiert, die mit \".onion\" endet . Ein Beispiel für eine solche Adresse ist die der Suchmaschine DuckDuckGo: duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QEine Deanonymisierung eines Onion Services theoretisch möglich, wenn der ISP (Internet Service Provider, also z.B. Telekom, EWE, etc.) eingehende und ausgehende Verbindungen zwischen Client und Onion Service bzw. zu deren \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q aufzeichnet und mithilfe von Machine Learning analysiert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"ZUSAMMENGESETZTE_VERBEN","sentence":"^\\QDie Umsetzung der theoretischen Grundlagen war bisher unter idealisierten Bedingungen erfolgreich, jedoch sind weitere Untersuchungen notwendig, um die potenziellen Gefahren dieses Algorithmus einordnen zu können . Bei einer Zusammenarbeit der Regierungen Deutschlands, der USA und Frankreichs könnten 78,34 % der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q deanonymisiert werden . Dieses Szenario erscheint jedoch unrealistisch, da die Bürger in Deutschland, den USA und Frankreich das Recht auf freie Meinungsäußerung haben und daher höchstwahrscheinlich keine Deanonymisierungsangriffe starten werden, um die Privatsphäre z.B. von Whistleblowern zu schützen \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDie Umsetzung der theoretischen Grundlagen war bisher unter idealisierten Bedingungen erfolgreich, jedoch sind weitere Untersuchungen notwendig, um die potenziellen Gefahren dieses Algorithmus einordnen zu können . Bei einer Zusammenarbeit der Regierungen Deutschlands, der USA und Frankreichs könnten 78,34 % der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q deanonymisiert werden . Dieses Szenario erscheint jedoch unrealistisch, da die Bürger in Deutschland, den USA und Frankreich das Recht auf freie Meinungsäußerung haben und daher höchstwahrscheinlich keine Deanonymisierungsangriffe starten werden, um die Privatsphäre z.B. von Whistleblowern zu schützen \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QZudem reagiert die Organisation des Tor-Netzwerkes \"The Tor Project\" relativ schnell auf mögliche Deanonymisierungsangriffe und versucht diese zu beheben.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QMit den vorgeschlagenen Konzepten ist der Messenger imstande anonym (durch das Tor-Netzwerk und Onion Services) und sicher (durch die E2EE) zu kommunizieren, jedoch wurde die Infrastruktur des Messengers noch nicht behandelt.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QFolgende Kriterien müssen erfüllt sein, um den Messenger sicher, anonym und einfach zu gestalten: [Einfache Handhabung und Installation] Für die Installation und Nutzung des Messengers sollten möglichst wenig technische Kenntnisse nötig sein [Peer-to-Peer-Verbindung] Die Kommunikation zwischen Messengern sollte nur über eine direkte Verbindung erfolgen [Anonymität] Verbindungen zwischen Messengern nur das Tor-Netzwerk, keine Anfragen über das normale Internet [Sicherheit] Verschlüsselte Speicherung von Chatverläufen und Schlüsselpaaren, um Auslesen der Daten (z.B. durch totalitäre Staaten) zu verhindern [E2EE] Verschlüsselung der Nachrichten und Verifikation des Kommunikationspartners Damit der Benutzer keine Konsole verwenden muss, um den Messenger zu benutzen, habe ich eine Desktopanwendung mit Rust und Tauri entwickelt.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QRust bietet eine hohe Performance und ist Memory Safe, wodurch viele Sicherheitslücken, wie Buffer Overflows, verhindert werden können \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDas Tauri Framework bietet hier zwischen dem User Interface (UI), welches ich in Typescript und React programmiert habe, und dem Rust-Backend eine Schnittstelle, um Daten (payloads) zwischen Frontend und Backend zu versenden \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUm als Server zu agieren, startet jeder Messenger einen HTTP-Server, der einen HTTP-Endpunkt anbietet (in diesem Messenger /ws/), mit welchem Clients eine Websocket-Verbindung aufbauen können.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDer Server ist somit in der Lage, sowohl Packets zu empfangen als auch zu senden.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDadurch, dass jeder Messenger sowohl Client als auch Server sein kann, müssen empfangene Nachrichten von Client und Server zusammengeführt und an das Frontend übermittelt werden, welches in der Bibliothek messaging implementiert ist: Der MessagingManager speichert sowohl Client-Server-(C2S) als auch Server-Client(S2C)-Verbindungen in einem allgemeinen Konstrukt, der Connection.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDer MessagingManager stellt dem Frontend eine generelle Schnittstelle zum Senden und Empfangen von Nachrichten zur Verfügung.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDiese Connections werden in einer HashMap gespeichert.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QMögliches Beispiel für Messenger B, welcher eine Verbindung zu Messenger A aufgebaut hat, und Messenger C, welcher mit Messenger B verbunden ist Wenn in diesem Beispiel das Frontend von Messenger B eine Anfrage an den MessagingManager schickt, eine Nachricht an Messenger A zu senden, wird die Nachricht verschlüsselt und an den entsprechenden Client weiterleitet.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDamit der Messenger das Tor-Netzwerk verwenden kann, muss zunächst eine Verbindung zum Tor-Netzwerk hergestellt werden, welches über die tor-proxy Bibliothek geschieht.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDamit sich der Tor-Proxy gestartet werden kann, wird eine Konfigurationsdatei benötigt, welche durch die tor-proxy Bibliothek erstellt wird: Nun muss nur noch der Tor-Proxy gestartet werden: Wenn der Proxy gestartet ist, werden eingehende Verbindungen zum Onion Service dieses Messengers auf den Port des HTTP-Servers umgeleitet.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QEin symmetrisch verschlüsselter Datenspeicher wird durch die Bibliothek secure-storage implementiert.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QMit dieser Bibliothek können beliebige Structs in Text umgewandelt und verschlüsseln bzw. ausgelesen und entschlüsselt werden.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDie storage-internal Bibliothek verwendet hierbei die Methoden der secure-storage Bibliothek und dient als Wrapper, um die Daten auf der Festplatte zu speichern und wieder auszulesen.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QFolgende Kriterien müssen erfüllt sein, um den Messenger sicher, anonym und einfach zu gestalten: [Einfache Handhabung und Installation] Für die Installation und Nutzung des Messengers sollten möglichst wenig technische Kenntnisse nötig sein [Peer-to-Peer-Verbindung] Die Kommunikation zwischen Messengern sollte nur über eine direkte Verbindung erfolgen [Anonymität] Verbindungen zwischen Messengern nur das Tor-Netzwerk, keine Anfragen über das normale Internet [Sicherheit] Verschlüsselte Speicherung von Chatverläufen und Schlüsselpaaren, um Auslesen der Daten (z.B. durch totalitäre Staaten) zu verhindern [E2EE] Verschlüsselung der Nachrichten und Verifikation des Kommunikationspartners Damit der Benutzer keine Konsole verwenden muss, um den Messenger zu benutzen, habe ich eine Desktopanwendung mit Rust und Tauri entwickelt.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QMögliches Beispiel für Messenger B, welcher eine Verbindung zu Messenger A aufgebaut hat, und Messenger C, welcher mit Messenger B verbunden ist Wenn in diesem Beispiel das Frontend von Messenger B eine Anfrage an den MessagingManager schickt, eine Nachricht an Messenger A zu senden, wird die Nachricht verschlüsselt und an den entsprechenden Client weiterleitet.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QMessenger A und Messenger B erzeugen zunächst (falls noch nicht vorhanden) private Schlüssel und erstellen ein neues StorageChat-Konstrukt, in welchem die privaten Schlüssel gespeichert werden.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QUm das Konzept der E2EE umzusetzen, muss der Sender einer Nachricht sicher sein, dass der Empfänger tatsächlich derjenige ist, für den er sich ausgibt.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QDas Prinzip des Onion-Routings \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Nur die \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q kennt also die echte IP-Adresse des Clients und nur die \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q weiß, an welchen Zielserver die Anfrage geschickt wurde \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QVor diesem Hintergrund könnte ein dezentraler, Ende-zu-Ende-ver -schlüsselter Messenger, der über das Tor-Netzwerk kommuniziert, eine Lösung für diese Probleme darstellen.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QBei E2EE wird die Nachricht vom Sender verschlüsselt, bevor sie an den Empfänger gesendet wird \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"DE_CASE","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Verschlüsselung zu \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q mit \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q als Nachricht \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Umkehroperation (Entschlüsslung) von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Damit die verschlüsselte Nachricht \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q wieder entschlüsselt werden kann, bräuchte ein Angreifer die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDer wesentliche Unterschied zur asymmetrischen Verschlüsselung besteht darin, dass bei symmetrischen Verschlüsselung derselbe Schlüssel zum Ver- und Entschlüsseln verwendet wird \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QOnion Services beheben im Vergleich zu normalen Zielservern im Tor-Netzwerk das Problem der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q-Angriffe, dadurch dass sie nicht mehr auf \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q angewie -sen sind.\\E$"}
{"rule":"ZUSAMMENGESETZTE_VERBEN","sentence":"^\\QDie Umsetzung der theoretischen Grundlagen war bisher unter idealisierten Bedingungen erfolgreich, jedoch sind weitere Untersuchungen notwendig, um die potenziellen Gefahren dieses Algorithmus einordnen zu können . Bei einer Zusammenarbeit der Regierungen Deutschlands, der USA und Frankreichs könnten nach der Studie 78,34 % der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q deanonymisiert werden . Dieses Szenario erscheint jedoch unrealistisch, da die Bürger in Deutschland, den USA und Frankreich das Recht auf freie Meinungsäußerung haben und die Staaten daher höchstwahrscheinlich keine Deanonymisierungsangriffe starten werden, um die Privatsphäre von z.B. Whistleblowern zu schützen \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDie Umsetzung der theoretischen Grundlagen war bisher unter idealisierten Bedingungen erfolgreich, jedoch sind weitere Untersuchungen notwendig, um die potenziellen Gefahren dieses Algorithmus einordnen zu können . Bei einer Zusammenarbeit der Regierungen Deutschlands, der USA und Frankreichs könnten nach der Studie 78,34 % der \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q deanonymisiert werden . Dieses Szenario erscheint jedoch unrealistisch, da die Bürger in Deutschland, den USA und Frankreich das Recht auf freie Meinungsäußerung haben und die Staaten daher höchstwahrscheinlich keine Deanonymisierungsangriffe starten werden, um die Privatsphäre von z.B. Whistleblowern zu schützen \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDas bedeutet, dass es zwar einfach ist, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu berechnen (im Falle der RSA Verschlüsselung), jedoch unmöglich ist, von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q auf den ursprünglichen Wert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu schließen, ohne eine weitere notwendige Komponente zu kennen (bei dem RSA-Verfahren wäre dies die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q) . [width=0.5]img/Trapdoor_permutation.svg Eine Visualisierung der Trapdoor-Einwegfunktion \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Die ausschlaggebende Größe ist hierbei die Bitlänge des Produktes \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QDas bedeutet, dass es zwar einfach ist, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu berechnen (im Falle der RSA Verschlüsselung), jedoch unmöglich ist, von \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q auf den ursprünglichen Wert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q zu schließen, ohne eine weitere notwendige Komponente zu kennen (bei dem RSA-Verfahren wäre dies die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q) . [width=0.5]img/Trapdoor_permutation.svg Eine Visualisierung der Trapdoor-Einwegfunktion \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Die ausschlaggebende Größe ist hierbei die Bitlänge des Produktes \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QZur Entschlüsselung einer Nachricht ist die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, welche im privaten Schlüssel enthalten ist, erforderlich \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Sowohl der private als auch der öffentliche Schlüssel wurden nun berechnet, bilden also das Schlüsselpaar, und können nun zur Ver- und Entschlüsselung von Nachrichten verwendet werden.\\E$"}
{"rule":"DE_CASE","sentence":"^\\QZur Entschlüsselung einer Nachricht ist die Komponente \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, welche im privaten Schlüssel enthalten ist, erforderlich \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Sowohl der private als auch der öffentliche Schlüssel wurden nun berechnet, bilden also das Schlüsselpaar, und können nun zur Ver- und Entschlüsselung von Nachrichten verwendet werden.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QOnion Services bieten eine mögliche Lösung für die \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q-Angriffe, da diese nur innerhalb des Tor-Netzwerkes agieren, somit nicht auf \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q angewie -sen sind.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QEine Deanonymisierung eines Onion Services wäre theoretisch möglich, wenn der ISP (Internet Service Provider, also z.B. Telekom, EWE, etc.) eingehende und ausgehende Verbindungen zwischen Client und Onion Service bzw. zu deren \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q aufzeichnet und mithilfe von Machine Learning analysiert \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QIm Gegensatz zu normalen öffentlichen Servern müssen bei Onion Services keine Ports geöffnet werden, wenn Clients sich mit diesem verbinden wollen . Der Grund dafür ist, dass Onion Service hierbei mit dem Tor-Netzwerk nur über ausgehende Verbindungen kommuniziert und somit alle Daten über diese Verbindung leitet (auch bekannt als NAT-Punching) .\\E$"}
{"rule":"GERMAN_SPELLER_RULE","sentence":"^\\QDamit sich der Tor-Proxy gestartet werden kann, wird eine Konfigurationsdatei benötigt, welche durch die tor-proxy Bibliothek erstellt wird: Zusätzlich habe ich den Pluggable-Transport Snowflake mit in die Konfigurationsdatei eingebunden, wenn das Feature \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q aktiv ist.\\E$"}
